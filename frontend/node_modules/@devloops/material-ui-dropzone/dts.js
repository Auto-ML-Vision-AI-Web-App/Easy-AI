const path = require("path");
const fs = require("fs");
const glob = require("glob");
const { generate } = require("react-dts-generator");
// var reactDocs = require("react-docgen");
//joining path of directory
const directoryPath = path.join(__dirname, "src/components");
const componentList = [];
glob("src/components/**/*.js", function(er, files) {
  //   console.log("files :", files);
  files.forEach(file => {
    console.log("file :", file);
    if (
      file.match("test/") !== null ||
      file.match("index.js") !== null ||
      file.match("Config.js") !== null ||
      file.match("WithRouter.js") !== null ||
      file.match("Colors.js") !== null ||
      file.match("Notch.js") !== null ||
      file.match("withUiControl.js") !== null ||
      file.match("style") !== null ||
      file.match("ThemeProvider") !== null ||
      file.match("config.js") !== null
    ) {
      return true;
    }
    componentList.push(file);
    let fileDirectory = file.split("/");
    fileDirectory = fileDirectory.filter((i, k) => k !== fileDirectory.length - 1);

    // console.log("fileDi :", fileDirectory);
    let directoryHistory = "";
    for (const directory of fileDirectory) {
      directoryHistory += directory + "/";
      //   console.log("directoryHistory :", directoryHistory);
      if (!fs.existsSync(path.join(__dirname, "typings/") + directoryHistory)) {
        fs.mkdirSync(path.join(__dirname, "typings/") + directoryHistory);
      }
    }
    console.log("file :", file);
    generate({
      input: file,
      isBaseClass: true,
      output: __dirname + "/typings/" + file
    });
  });
  let fileData = "";
  componentList.map(file => {
    fileData += "import * as " + file.split("/")[file.split("/").length - 1].split(".")[0] + " from'" + file + "';\n";
  });
  fs.writeFile(path.join(__dirname, "/typings/index.d.ts"), fileData, function(err) {
    if (err) {
      return console.log(err);
    }

    console.log("The file was saved!");
  });
});
