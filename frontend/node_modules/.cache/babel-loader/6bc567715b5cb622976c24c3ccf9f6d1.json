{"ast":null,"code":"import _objectSpread from \"/Users/hololo/Desktop/Projects/Eavy-AI/POC/frontend-template2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"/Users/hololo/Desktop/Projects/Eavy-AI/POC/frontend-template2/src/views/Components/DataUpload.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport clsx from 'clsx'; //file-upload-drop-zone\n\nimport { useDropzone } from 'react-dropzone'; //file------upload-----\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4)\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column'\n    },\n    fixedHeight: {\n      height: 240\n    }\n  };\n});\nexport default function DataUpload() {\n  _s();\n\n  var classes = useStyles();\n  var fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: fixedHeightPaper,\n          children: /*#__PURE__*/_jsxDEV(Basic, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\n_s(DataUpload, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = DataUpload;\n{\n  /* dropzone basic */\n}\n\nfunction Basic(props) {\n  _s2();\n\n  var _this = this;\n\n  var _useDropzone = useDropzone(),\n      acceptedFiles = _useDropzone.acceptedFiles,\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps;\n\n  var files = acceptedFiles.map(function (file) {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [file.path, \" - \", file.size, \" bytes\"]\n    }, file.path, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getRootProps({\n      className: 'dropzone'\n    })), {}, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps()), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop some files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: files\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Basic, \"eAh/RLN6rbEoG6HK5edg/Q8oEk0=\", false, function () {\n  return [useDropzone];\n});\n\n_c2 = Basic;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DataUpload\");\n$RefreshReg$(_c2, \"Basic\");","map":{"version":3,"sources":["/Users/hololo/Desktop/Projects/Eavy-AI/POC/frontend-template2/src/views/Components/DataUpload.js"],"names":["React","useEffect","useState","makeStyles","Grid","Paper","clsx","useDropzone","useStyles","theme","container","paddingTop","spacing","paddingBottom","paper","padding","display","overflow","flexDirection","fixedHeight","height","DataUpload","classes","fixedHeightPaper","Basic","props","acceptedFiles","getRootProps","getInputProps","files","map","file","path","size","className"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CAEA;;AACA,SAAQC,WAAR,QAA0B,gBAA1B,C,CACA;;;;AAEA,IAAMC,SAAS,GAAGL,UAAU,CAAC,UAACM,KAAD;AAAA,SAAY;AACvCC,IAAAA,SAAS,EAAE;AACTC,MAAAA,UAAU,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH;AAETC,MAAAA,aAAa,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd;AAFN,KAD4B;AAKvCE,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEN,KAAK,CAACG,OAAN,CAAc,CAAd,CADJ;AAELI,MAAAA,OAAO,EAAE,MAFJ;AAGLC,MAAAA,QAAQ,EAAE,MAHL;AAILC,MAAAA,aAAa,EAAE;AAJV,KALgC;AAWvCC,IAAAA,WAAW,EAAE;AACXC,MAAAA,MAAM,EAAE;AADG;AAX0B,GAAZ;AAAA,CAAD,CAA5B;AAgBA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,MAAMC,OAAO,GAAGd,SAAS,EAAzB;AACA,MAAMe,gBAAgB,GAAGjB,IAAI,CAACgB,OAAO,CAACR,KAAT,EAAgBQ,OAAO,CAACH,WAAxB,CAA7B;AAEA,sBACM;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA,+BACQ,QAAC,KAAD;AAAO,UAAA,SAAS,EAAEI,gBAAlB;AAAA,iCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADN;AAWD;;GAfuBF,U;UACNb,S;;;KADMa,U;AAiBxB;AAAC;AAAqB;;AACtB,SAASG,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAAA;;AACpB,qBAAqDlB,WAAW,EAAhE;AAAA,MAAOmB,aAAP,gBAAOA,aAAP;AAAA,MAAsBC,YAAtB,gBAAsBA,YAAtB;AAAA,MAAoCC,aAApC,gBAAoCA,aAApC;;AAEA,MAAMC,KAAK,GAAGH,aAAa,CAACI,GAAd,CAAkB,UAAAC,IAAI;AAAA,wBAClC;AAAA,iBACGA,IAAI,CAACC,IADR,SACiBD,IAAI,CAACE,IADtB;AAAA,OAASF,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA,aADkC;AAAA,GAAtB,CAAd;AAMA,sBACE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA,4BACE,+CAASL,YAAY,CAAC;AAACO,MAAAA,SAAS,EAAE;AAAZ,KAAD,CAArB;AAAA,8BACE,mCAAWN,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;IArBQL,K;UAC8CjB,W;;;MAD9CiB,K","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport clsx from 'clsx';\n\n//file-upload-drop-zone\nimport {useDropzone} from 'react-dropzone';\n//file------upload-----\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DataUpload() {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  \n  return (\n        <>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n                    <Paper className={fixedHeightPaper}>\n                      <Basic />\n                    </Paper>\n            </Grid>\n          </Grid>\n        </>\n  );\n}\n\n{/* dropzone basic */}\nfunction Basic(props) {\n  const {acceptedFiles, getRootProps, getInputProps} = useDropzone();\n  \n  const files = acceptedFiles.map(file => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n    </li>\n  ));\n\n  return (\n    <section className=\"container\">\n      <div {...getRootProps({className: 'dropzone'})}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files</p>\n      </div>\n      <aside>\n        <h4>Files</h4>\n        <ul>{files}</ul>\n      </aside>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}