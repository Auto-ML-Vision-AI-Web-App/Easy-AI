{"ast":null,"code":"/*import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport clsx from 'clsx';\n\n//file-upload-drop-zone\nimport {useDropzone} from 'react-dropzone';\n\nconst thumbsContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  marginTop: 16,\n};\n\nconst thumb = {\n  display: 'inline-flex',\n  borderRadius: 2,\n  border: '1px solid #eaeaea',\n  marginBottom: 8,\n  marginRight: 8,\n  width: 100,\n  height: 100,\n  padding: 4,\n  boxSizing: 'border-box'\n};\n\nconst thumbInner = {\n  display: 'flex',\n  minWidth: 0,\n  overflow: 'hidden'\n};\n\nconst img = {\n  display: 'block',\n  width: 'auto',\n  height: '100%'\n};\n//file------upload-----\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DataUploadPreview() {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  \n  return (\n        <>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n                    <Paper className={fixedHeightPaper}>\n                        <DropzonePreview></DropzonePreview>\n                    </Paper>\n            </Grid>\n          </Grid>\n        </>\n  );\n}\n\nfunction DropzonePreview(props) {\n  const [files, setFiles] = useState([]);\n  const {getRootProps, getInputProps} = useDropzone({\n    accept: '/*',\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n    }\n  });\n  \n  const thumbs = files.map(file => (\n    <div style={thumb} key={file.name}>\n      <div style={thumbInner}>\n        <img\n          src={file.preview}\n          style={img}\n        />\n      </div>\n    </div>\n  ));\n\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n\n  return (\n    <section className=\"container\">\n      <div {...getRootProps({className: 'dropzone'})}>\n        <input {...getInputProps()} />\n        <p>this is preview component</p>\n      </div>\n      <aside style={thumbsContainer}>\n        {thumbs}\n      </aside>\n    </section>\n  );\n}\n*/","map":{"version":3,"sources":["/Users/hololo/Desktop/Projects/Eavy-AI/POC/frontend-template2/src/views/Components/DataUpload(preview).js"],"names":[],"mappingssourcesContent":["/*import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport clsx from 'clsx';\n\n//file-upload-drop-zone\nimport {useDropzone} from 'react-dropzone';\n\nconst thumbsContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  marginTop: 16,\n};\n\nconst thumb = {\n  display: 'inline-flex',\n  borderRadius: 2,\n  border: '1px solid #eaeaea',\n  marginBottom: 8,\n  marginRight: 8,\n  width: 100,\n  height: 100,\n  padding: 4,\n  boxSizing: 'border-box'\n};\n\nconst thumbInner = {\n  display: 'flex',\n  minWidth: 0,\n  overflow: 'hidden'\n};\n\nconst img = {\n  display: 'block',\n  width: 'auto',\n  height: '100%'\n};\n//file------upload-----\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DataUploadPreview() {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  \n  return (\n        <>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n                    <Paper className={fixedHeightPaper}>\n                        <DropzonePreview></DropzonePreview>\n                    </Paper>\n            </Grid>\n          </Grid>\n        </>\n  );\n}\n\nfunction DropzonePreview(props) {\n  const [files, setFiles] = useState([]);\n  const {getRootProps, getInputProps} = useDropzone({\n    accept: '/*',\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n    }\n  });\n  \n  const thumbs = files.map(file => (\n    <div style={thumb} key={file.name}>\n      <div style={thumbInner}>\n        <img\n          src={file.preview}\n          style={img}\n        />\n      </div>\n    </div>\n  ));\n\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n\n  return (\n    <section className=\"container\">\n      <div {...getRootProps({className: 'dropzone'})}>\n        <input {...getInputProps()} />\n        <p>this is preview component</p>\n      </div>\n      <aside style={thumbsContainer}>\n        {thumbs}\n      </aside>\n    </section>\n  );\n}\n*/"]},"metadata":{},"sourceType":"module"}