{"ast":null,"code":"import _objectSpread from \"/Users/hololo/Desktop/Projects/Eavy-AI/POC/frontend-template2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/hololo/Desktop/Projects/Eavy-AI/POC/frontend-template2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/hololo/Desktop/Projects/Eavy-AI/POC/frontend-template2/src/views/Components/DataUpload(preview).js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport clsx from 'clsx'; //file-upload-drop-zone\n\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar thumbsContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  marginTop: 16\n};\nvar thumb = {\n  display: 'inline-flex',\n  borderRadius: 2,\n  border: '1px solid #eaeaea',\n  marginBottom: 8,\n  marginRight: 8,\n  width: 100,\n  height: 100,\n  padding: 4,\n  boxSizing: 'border-box'\n};\nvar thumbInner = {\n  display: 'flex',\n  minWidth: 0,\n  overflow: 'hidden'\n};\nvar img = {\n  display: 'block',\n  width: 'auto',\n  height: '100%'\n}; //file------upload-----\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4)\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column'\n    },\n    fixedHeight: {\n      height: 240\n    }\n  };\n});\nexport default function DataUpload() {\n  _s();\n\n  var classes = useStyles();\n  var fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: fixedHeightPaper,\n          children: /*#__PURE__*/_jsxDEV(DropzonePreview, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\n_s(DataUpload, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = DataUpload;\n\nfunction DropzonePreview(props) {\n  _s2();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      files = _useState2[0],\n      setFiles = _useState2[1];\n\n  var _useDropzone = useDropzone({\n    accept: '/*',\n    onDrop: function onDrop(acceptedFiles) {\n      setFiles(acceptedFiles.map(function (file) {\n        return Object.assign(file, {\n          preview: URL.createObjectURL(file)\n        });\n      }));\n    }\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps;\n\n  var thumbs = files.map(function (file) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: thumb,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: thumbInner,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: file.preview,\n          style: img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, _this)\n    }, file.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, _this);\n  });\n  useEffect(function () {\n    return function () {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach(function (file) {\n        return URL.revokeObjectURL(file.preview);\n      });\n    };\n  }, [files]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getRootProps({\n      className: 'dropzone'\n    })), {}, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps()), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"what the fuck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      style: thumbsContainer,\n      children: thumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(DropzonePreview, \"HtUHmGo3hwDZKSmIKg3riAANKQ4=\", false, function () {\n  return [useDropzone];\n});\n\n_c2 = DropzonePreview;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DataUpload\");\n$RefreshReg$(_c2, \"DropzonePreview\");","map":{"version":3,"sources":["/Users/hololo/Desktop/Projects/Eavy-AI/POC/frontend-template2/src/views/Components/DataUpload(preview).js"],"names":["React","useEffect","useState","makeStyles","Grid","Paper","clsx","useDropzone","thumbsContainer","display","flexDirection","flexWrap","marginTop","thumb","borderRadius","border","marginBottom","marginRight","width","height","padding","boxSizing","thumbInner","minWidth","overflow","img","useStyles","theme","container","paddingTop","spacing","paddingBottom","paper","fixedHeight","DataUpload","classes","fixedHeightPaper","DropzonePreview","props","files","setFiles","accept","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","thumbs","name","forEach","revokeObjectURL","className"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport clsx from 'clsx';\n\n//file-upload-drop-zone\nimport {useDropzone} from 'react-dropzone';\n\nconst thumbsContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  marginTop: 16,\n};\n\nconst thumb = {\n  display: 'inline-flex',\n  borderRadius: 2,\n  border: '1px solid #eaeaea',\n  marginBottom: 8,\n  marginRight: 8,\n  width: 100,\n  height: 100,\n  padding: 4,\n  boxSizing: 'border-box'\n};\n\nconst thumbInner = {\n  display: 'flex',\n  minWidth: 0,\n  overflow: 'hidden'\n};\n\nconst img = {\n  display: 'block',\n  width: 'auto',\n  height: '100%'\n};\n//file------upload-----\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function DataUpload() {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  \n  return (\n        <>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n                    <Paper className={fixedHeightPaper}>\n                        <DropzonePreview></DropzonePreview>\n                    </Paper>\n            </Grid>\n          </Grid>\n        </>\n  );\n}\n\nfunction DropzonePreview(props) {\n  const [files, setFiles] = useState([]);\n  const {getRootProps, getInputProps} = useDropzone({\n    accept: '/*',\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n    }\n  });\n  \n  const thumbs = files.map(file => (\n    <div style={thumb} key={file.name}>\n      <div style={thumbInner}>\n        <img\n          src={file.preview}\n          style={img}\n        />\n      </div>\n    </div>\n  ));\n\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n\n  return (\n    <section className=\"container\">\n      <div {...getRootProps({className: 'dropzone'})}>\n        <input {...getInputProps()} />\n        <p>what the fuck</p>\n      </div>\n      <aside style={thumbsContainer}>\n        {thumbs}\n      </aside>\n    </section>\n  );\n}"]},"metadata":{},"sourceType":"module"}